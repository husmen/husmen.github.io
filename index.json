[{"authors":["admin"],"categories":null,"content":"I am Houssem Menhour, currently studying Computer Engineering at Kocaeli University with a focus on Data Science and Machine Learning. I program mostly in C++ and Python, but recently started picking interest in Go and Scala as well.\nThis is a space where I share some random thoughts, and write about interesting projects and topics in my field.\nMore information here .\n","date":1582329600,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1582329600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am Houssem Menhour, currently studying Computer Engineering at Kocaeli University with a focus on Data Science and Machine Learning. I program mostly in C++ and Python, but recently started picking interest in Go and Scala as well.\nThis is a space where I share some random thoughts, and write about interesting projects and topics in my field.\nMore information here .","tags":null,"title":"Houssem Menhour","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes .  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Süleyman Eken","Houssem Menhour","Ramazan Nejdet Sarıkaya","Ahmet Sayar"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- COMING SOON.\n","date":1582329600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582329600,"objectID":"df99190d45698fc41db7a9c70f1a3f94","permalink":"/publications/aaa2020/","publishdate":"2019-07-22T00:00:00Z","relpermalink":"/publications/aaa2020/","section":"publications","summary":"Efficient Implementation of Artificial Algae Algorithm on CUDA-supported GPUs.","tags":["CUDA","Optimization","Parallel Computing"],"title":"Efficient Implementation of Artificial Algae Algorithm on CUDA-supported GPUs","type":"publications"},{"authors":["Süleyman Eken","Muhammed Şara","Yusuf Satılmış","Münir Karslı","Muhammet Furkan Tufan","Houssem Menhour","Ahmet Sayar"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- As autonomous cars and complex features of them grow in popularity, ensuring that analyses and capabilities are reproducible and repeatable has taken on importance in education plans too. This paper describes a reproducible research plan on mini autonomous race car programming. This educational plan is designed and implemented as part of a summer internship program at Kocaeli University and it consists of theoretical courses and laboratory assignments. A literate programming approach with the Python language is used for programming the race car. To assess the educational program\u0026rsquo;s impact on the learning process and to evaluate the acceptance and satisfaction level of students, they answered an electronic questionnaire after finishing the program. According to students\u0026rsquo; feedback, the reproducible educational program is useful for learning and consolidating new concepts of mini autonomous car programming.\n","date":1579651200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579651200,"objectID":"cda0060774ab1ed02313874d3f95b164","permalink":"/publications/racecar2020/","publishdate":"2020-01-22T00:00:00Z","relpermalink":"/publications/racecar2020/","section":"publications","summary":"An educational plan to teach university students autonomous car programming.","tags":["Autonomous Driving","Object Detection","Computer Vision","Deep Learning","ROS"],"title":"A Reproducible Educational Plan to Teach Mini Autonomous Race Car Programming","type":"publications"},{"authors":null,"categories":null,"content":"Artificial Algae Algorithm, Implementation in Python and Cuda C++ with a dozen of optimization functions. Artificial algae algorithm (AAA) is a novel bio-inspired meta-heuristic optimization algorithm proposed by Sait AliUymaz The algorithm is based on an evolutionary process, adaptation process and the movement of micro-algae. Artificial algae correspond to each solution in the problem space by idealizing the characteristics of algae. Similar to the real algae, artificial algae can move toward the source of light to photosynthesize with helical swimming, and they can adapt to the environment, are able to change the dominant species and can reproduce by mitotic division. Thus, the algorithm was composed of 3 basic parts called “Evolutionary Process”, “Adaptation” and “Helical Movement”.\n","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577836800,"objectID":"f15fdbb1ff5f1403d8c7f3aa93f1277a","permalink":"/portfolio/aaa/","publishdate":"2020-01-01T00:00:00Z","relpermalink":"/portfolio/aaa/","section":"portfolio","summary":"Python and Cuda C++ implementation of Artificial Algae Algorithm.","tags":["Python","Cpp","Cuda","Full-text Search","Backend"],"title":"Artificial Algae Algorithm","type":"portfolio"},{"authors":null,"categories":null,"content":"Implementation of Eight-Point Algorithm in C++. OpenCV variant is provided forcomparison only.\n","date":1575158400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575158400,"objectID":"1394e2b2c8d28559bdcc0a806d474f3a","permalink":"/portfolio/eight-point/","publishdate":"2019-12-01T00:00:00Z","relpermalink":"/portfolio/eight-point/","section":"portfolio","summary":"Implementation of Eight-Point Algorithm in C++.","tags":["Cpp","Image Processing","OpenCV"],"title":"Eight-Point Algorithm","type":"portfolio"},{"authors":null,"categories":null,"content":"Centroid-based Text Summarization through Compositionality of Word Embeddings. Adopted to the turkish language, and demonstrated with news aggregation and summarization as a use case example. This project won 2nd place at #AçıkHack NLP Hackathon 2019.\n","date":1574208000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1574208000,"objectID":"d6f3d8177b45cacd357f2ca56b0900a8","permalink":"/portfolio/tezhaber/","publishdate":"2019-11-20T00:00:00Z","relpermalink":"/portfolio/tezhaber/","section":"portfolio","summary":"Turkish News Aggregator \u0026 Summarizer.","tags":["Python","NLP","Word Embedding","Web Scraping"],"title":"TezHaber","type":"portfolio"},{"authors":["Süleyman Eken","Houssem Menhour","Kübra Köksal"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including [code and math](https://sourcethemes.com/academic/docs/writing-markdown-latex/). -- Regardless of industry, the overload of information facing most organizations today is a drain on both individuals and the enterprise itself. The increasing volume of this information, which is stored in different electronic formats, requires new sophisticated systems to analyse and classify them. In this paper, we attempt to implement a framework for Document Classification and Analysis (DoCA) that can simplify and automate such tasks for different file types, namely: office documents (text, spreadsheets, and presentations), scanned documents (images and PDFs), multimedia files (video and audio). Each file type requires different methods for pre-processing, analysis, and classification. The efficiency and feasibility of the DoCA are examined on HAVELSAN dataset and accuracy of different tasks shows that the DoCA is a promising tool for document analysis and classification.\n","date":1563753600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563753600,"objectID":"23919fbeaa7caf54a46d2f1f7fb83cc8","permalink":"/publications/doca2019/","publishdate":"2019-07-22T00:00:00Z","relpermalink":"/publications/doca2019/","section":"publications","summary":"In this paper, we attempt to implement a framework for Document Classification and Analysis (DoCA) that can simplify and automate such tasks for different file types.","tags":["NLP","OCR","Word Embedding","Document Clustering","Audio Analysis","Video Analysis"],"title":"DoCA: A Content-Based Automatic Classification System Over Digital Documents","type":"publications"},{"authors":null,"categories":null,"content":"C++ implementation of scope based timer, it is offered as a class to be easily imported to any existing project.\n","date":1561939200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561939200,"objectID":"333366235c4e1011a092d21c5d15dfbd","permalink":"/portfolio/scope-timer/","publishdate":"2019-07-01T00:00:00Z","relpermalink":"/portfolio/scope-timer/","section":"portfolio","summary":"Scope Based Timer in C++.","tags":["Cpp"],"title":"Scope Based Timer","type":"portfolio"},{"authors":null,"categories":null,"content":"House Prices Prediction with XGBoost and LightGBM for regression and Scikit-Learn grid search for hyperparameters optimization.\n","date":1560643200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560643200,"objectID":"23032c0a00608f8bd751b4884e24b103","permalink":"/portfolio/house-prices/","publishdate":"2019-06-16T00:00:00Z","relpermalink":"/portfolio/house-prices/","section":"portfolio","summary":"House Prices Prediction with XGBoost (Kaggle).","tags":["Python","XGBoost","Scikit-Learn","Regression","Machine Learning","Kaggle"],"title":"House Prices Prediction","type":"portfolio"},{"authors":null,"categories":null,"content":"How likely is an autonomous car to cause an accident/How hard it should brake depending on its speed and the distance to the next car. This is a fuzzy logic based car accident detector in Matlab.\n          ","date":1559347200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1559347200,"objectID":"e27cccbdb5fef75de575d2d559bb7aa2","permalink":"/portfolio/accident-detector/","publishdate":"2019-06-01T00:00:00Z","relpermalink":"/portfolio/accident-detector/","section":"portfolio","summary":"Fuzzy Logic based car accident detector in Matlab.","tags":["Matlab","Fuzzy Logic"],"title":"Car Accident Detector","type":"portfolio"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation  Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export : E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask  Documentation ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Distributed Video Streaming with Apache Kafka and Python.\n","date":1545868800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1545868800,"objectID":"01618023b94307875350e639ee542435","permalink":"/portfolio/kafka-stream/","publishdate":"2018-12-27T00:00:00Z","relpermalink":"/portfolio/kafka-stream/","section":"portfolio","summary":"Distributed Video Streaming with Apache Kafka and Python.","tags":["Python","Flask","Apache Kafka","Stream Processing","Backend"],"title":"Video Streaming","type":"portfolio"},{"authors":null,"categories":null,"content":"Submission for \u0026ldquo;PARDUS Dosya Sınıflandırma ve Analiz (DoSA)\u0026rdquo; Competition in which we won the first place.\n","date":1535328000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1535328000,"objectID":"d6ec4ccae37a2ee35087b44b2fcd5e42","permalink":"/portfolio/doca-gui/","publishdate":"2018-08-27T00:00:00Z","relpermalink":"/portfolio/doca-gui/","section":"portfolio","summary":"Submission for \"PARDUS Dosya Sınıflandırma ve Analiz (DoSA)\".","tags":["Python","Qt","NoSQL","CouchDB","NLP","OCR","DBSCAN","Word Embedding","Document Clustering","Audio Analysis","Video Analysis"],"title":"DoCA GUI","type":"portfolio"},{"authors":null,"categories":null,"content":"Implementation of a Quadtree with collision detection, built using C++ and QT.\n","date":1524700800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524700800,"objectID":"920856031c3ef42e11d4aad66f528c8d","permalink":"/portfolio/quadtree/","publishdate":"2018-04-26T00:00:00Z","relpermalink":"/portfolio/quadtree/","section":"portfolio","summary":"Implementation of a Quadtree and collision detection with C++ and QT.","tags":["Cpp","Qt","QuadTree","Collision Detection"],"title":"QuadTree","type":"portfolio"},{"authors":null,"categories":null,"content":"A client server app for trajectory data mapping/sampling/query in Python 3. This application implements the Ramer-Douglas-Peucker algorithm for trajectroy simplification.\n    ","date":1521590400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1521590400,"objectID":"877260fb1bcaed8e49d9555ddb502878","permalink":"/portfolio/trajectory-mapping/","publishdate":"2018-03-21T00:00:00Z","relpermalink":"/portfolio/trajectory-mapping/","section":"portfolio","summary":"Trajectory data mapping/sampling/query in Python 3.","tags":["Python","Qt","Matplotlib","Mplleaflet","Ramer-Douglas-Peucker"],"title":"Trajectory Mapping","type":"portfolio"},{"authors":null,"categories":null,"content":"Naive Bayes Classifier for Turkish Text.\n","date":1519689600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1519689600,"objectID":"95fc71e8bdc9f0c36333bbb7dfc10abd","permalink":"/portfolio/naivebayes/","publishdate":"2018-02-27T00:00:00Z","relpermalink":"/portfolio/naivebayes/","section":"portfolio","summary":"Naive Bayes Classifier for Turkish Text.","tags":["Python","NLP","Machine Learning"],"title":"Naive Bayes Classifier","type":"portfolio"},{"authors":null,"categories":null,"content":"Implementation of simple image processing algorithms with a GUI, built using C++ and GDI+.\n","date":1517529600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1517529600,"objectID":"8a5f088665638c386c06be2520fb787a","permalink":"/portfolio/image-proc/","publishdate":"2018-02-02T00:00:00Z","relpermalink":"/portfolio/image-proc/","section":"portfolio","summary":"Simple image processing algorithms in C++.","tags":["Cpp","GDI+","Visual Studio","Image Processing"],"title":"Simple Image Processing","type":"portfolio"},{"authors":null,"categories":null,"content":"a better than Google search engine (sarcasm).\n","date":1514332800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514332800,"objectID":"e7f349e3e688cbc24f875e214377ea14","permalink":"/portfolio/better-than-google/","publishdate":"2017-12-27T00:00:00Z","relpermalink":"/portfolio/better-than-google/","section":"portfolio","summary":"A better than Google search engine.","tags":["Python","Flask","Web Scraping","Full-text Search","Backend"],"title":"Better Than Google","type":"portfolio"},{"authors":null,"categories":null,"content":"Static website for IAESTE Kocaeli, was the official organisation portal in 2016 and 2017.\n","date":1475280000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1475280000,"objectID":"1bc015fa8edb5a387b3b3076c9d643ac","permalink":"/portfolio/iaeste/","publishdate":"2016-10-01T00:00:00Z","relpermalink":"/portfolio/iaeste/","section":"portfolio","summary":"Website for IAESTE Kocaeli.","tags":["HTML","CSS","Bootstrap","Frontend"],"title":"IAESTE Kocaeli","type":"portfolio"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"/about/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/about/","section":"","summary":"","tags":null,"title":"About Me","type":"widget_page"}]